---
interface Props{
  title: String;
  content: String;
  size: String;
}

const { title, content, size } = Astro.props;
---

<div class={(size === "big")? "image-container-big" : "image-container-small"}>
  <div class="overlay">
    <div class="m">
      <h3 class="text-3xl font-semibold">{title}</h3>
      <hr class="w-48 h-1 mx-auto my-4 border-0 rounded md:my-6 slide-in-left">
      <p class="text-justify tracking-tighter text-lg">{content}</p>
    </div>
  </div>
</div>

<style>
  body, html {
    margin: 0;
    padding: 0;
    height: 100%;
  }

  .image-container-big {
    position: relative;
    height: 400px; /* Mantener la altura fija */
    background-image: url('/images/transparencia.jpg'); /* Imagen de fondo */
    background-position: center;
    background-size: cover;
    background-attachment: fixed; /* Esto genera el efecto parallax */
  }

  .image-container-small {
    position: relative;
    height: 170px; /* Mantener la altura fija */
    background-image: url('/images/documents.jpg'); /* Imagen de fondo */
    background-position: bottom;
    background-size: cover;
    background-attachment: fixed; /* Esto genera el efecto parallax */
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6); /* Sombra sobre la imagen */
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-size: 24px;
  }

  .m {
    max-width: 600px;
    margin: 0 auto;
  }

  hr {
    background-color: #E6AD09;
  }

  .slide-in-left {
    opacity: 0;
    transform: translateX(-100px);
    animation: slideInLeft 3s forwards;
  }

  @keyframes slideInLeft {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
</style>
